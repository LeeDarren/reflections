What happens when you initialize a repository? Why do you need to do it?

	The answer is on the laptop!
	
How is the staging area different from the working directory and the repository? What value do you think it offers?

	The answer is also on the laptop!
	
How can you use the staging area to make sure you have one commit per logical change?

	You can add a certain amount of changed files to the staging area for a commit 
	while leaving unrelated changes outside of the staging area.  The work will still
	there in your working directory but not in the commit.  You can immediately start
	another commit afterwards in a logical chunk.  
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you need to add or change something as a test but don't want it implemented in the main project until later.
	Branching would allow you to work adding it and merge the changes on later.
	
How do the diagrams help you visualize the branch structure?

	They help you see all the branches at the same time and how they are connected.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The separate commits are combined together and there is a single tip now.  The diagram shows that the 
	tips are now together in one.
	
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	The automatic merging saves a lot of manpower for obvious tasks.  The main downside though is that it 
	can't know how to resolve some conflicts based on human logic.